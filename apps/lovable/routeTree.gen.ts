/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProIndexRouteImport } from './routes/pro/index'
import { Route as HousingIndexRouteImport } from './routes/housing/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as ProGliRouteImport } from './routes/pro/gli'
import { Route as AdminTotoRouteImport } from './routes/admin/toto'
import { Route as ProsinistresSinistresRouteRouteImport } from './routes/pro/(sinistres)/sinistres.route'
import { Route as ProbordereauxBordereauxRouteRouteImport } from './routes/pro/(bordereaux)/bordereaux.route'
import { Route as ProsinistresSinistresIndexRouteImport } from './routes/pro/(sinistres)/sinistres.index'
import { Route as ProbordereauxBordereauxIndexRouteImport } from './routes/pro/(bordereaux)/bordereaux.index'
import { Route as ProsinistresSinistresClaimIdRouteImport } from './routes/pro/(sinistres)/sinistres.$claimId'
import { Route as ProbordereauxBordereauxNouveauRouteImport } from './routes/pro/(bordereaux)/bordereaux.nouveau'
import { Route as ProbordereauxBordereauxBordereauIdRouteImport } from './routes/pro/(bordereaux)/bordereaux.$bordereauId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProIndexRoute = ProIndexRouteImport.update({
  id: '/pro/',
  path: '/pro/',
  getParentRoute: () => rootRouteImport,
} as any)
const HousingIndexRoute = HousingIndexRouteImport.update({
  id: '/housing/',
  path: '/housing/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProGliRoute = ProGliRouteImport.update({
  id: '/pro/gli',
  path: '/pro/gli',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTotoRoute = AdminTotoRouteImport.update({
  id: '/admin/toto',
  path: '/admin/toto',
  getParentRoute: () => rootRouteImport,
} as any)
const ProsinistresSinistresRouteRoute =
  ProsinistresSinistresRouteRouteImport.update({
    id: '/pro/(sinistres)/sinistres',
    path: '/pro/sinistres',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProbordereauxBordereauxRouteRoute =
  ProbordereauxBordereauxRouteRouteImport.update({
    id: '/pro/(bordereaux)/bordereaux',
    path: '/pro/bordereaux',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProsinistresSinistresIndexRoute =
  ProsinistresSinistresIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProsinistresSinistresRouteRoute,
  } as any)
const ProbordereauxBordereauxIndexRoute =
  ProbordereauxBordereauxIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProbordereauxBordereauxRouteRoute,
  } as any)
const ProsinistresSinistresClaimIdRoute =
  ProsinistresSinistresClaimIdRouteImport.update({
    id: '/$claimId',
    path: '/$claimId',
    getParentRoute: () => ProsinistresSinistresRouteRoute,
  } as any)
const ProbordereauxBordereauxNouveauRoute =
  ProbordereauxBordereauxNouveauRouteImport.update({
    id: '/nouveau',
    path: '/nouveau',
    getParentRoute: () => ProbordereauxBordereauxRouteRoute,
  } as any)
const ProbordereauxBordereauxBordereauIdRoute =
  ProbordereauxBordereauxBordereauIdRouteImport.update({
    id: '/$bordereauId',
    path: '/$bordereauId',
    getParentRoute: () => ProbordereauxBordereauxRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/toto': typeof AdminTotoRoute
  '/pro/gli': typeof ProGliRoute
  '/admin': typeof AdminIndexRoute
  '/housing': typeof HousingIndexRoute
  '/pro': typeof ProIndexRoute
  '/pro/bordereaux': typeof ProbordereauxBordereauxRouteRouteWithChildren
  '/pro/sinistres': typeof ProsinistresSinistresRouteRouteWithChildren
  '/pro/bordereaux/$bordereauId': typeof ProbordereauxBordereauxBordereauIdRoute
  '/pro/bordereaux/nouveau': typeof ProbordereauxBordereauxNouveauRoute
  '/pro/sinistres/$claimId': typeof ProsinistresSinistresClaimIdRoute
  '/pro/bordereaux/': typeof ProbordereauxBordereauxIndexRoute
  '/pro/sinistres/': typeof ProsinistresSinistresIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/toto': typeof AdminTotoRoute
  '/pro/gli': typeof ProGliRoute
  '/admin': typeof AdminIndexRoute
  '/housing': typeof HousingIndexRoute
  '/pro': typeof ProIndexRoute
  '/pro/bordereaux/$bordereauId': typeof ProbordereauxBordereauxBordereauIdRoute
  '/pro/bordereaux/nouveau': typeof ProbordereauxBordereauxNouveauRoute
  '/pro/sinistres/$claimId': typeof ProsinistresSinistresClaimIdRoute
  '/pro/bordereaux': typeof ProbordereauxBordereauxIndexRoute
  '/pro/sinistres': typeof ProsinistresSinistresIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/toto': typeof AdminTotoRoute
  '/pro/gli': typeof ProGliRoute
  '/admin/': typeof AdminIndexRoute
  '/housing/': typeof HousingIndexRoute
  '/pro/': typeof ProIndexRoute
  '/pro/(bordereaux)/bordereaux': typeof ProbordereauxBordereauxRouteRouteWithChildren
  '/pro/(sinistres)/sinistres': typeof ProsinistresSinistresRouteRouteWithChildren
  '/pro/(bordereaux)/bordereaux/$bordereauId': typeof ProbordereauxBordereauxBordereauIdRoute
  '/pro/(bordereaux)/bordereaux/nouveau': typeof ProbordereauxBordereauxNouveauRoute
  '/pro/(sinistres)/sinistres/$claimId': typeof ProsinistresSinistresClaimIdRoute
  '/pro/(bordereaux)/bordereaux/': typeof ProbordereauxBordereauxIndexRoute
  '/pro/(sinistres)/sinistres/': typeof ProsinistresSinistresIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/toto'
    | '/pro/gli'
    | '/admin'
    | '/housing'
    | '/pro'
    | '/pro/bordereaux'
    | '/pro/sinistres'
    | '/pro/bordereaux/$bordereauId'
    | '/pro/bordereaux/nouveau'
    | '/pro/sinistres/$claimId'
    | '/pro/bordereaux/'
    | '/pro/sinistres/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/toto'
    | '/pro/gli'
    | '/admin'
    | '/housing'
    | '/pro'
    | '/pro/bordereaux/$bordereauId'
    | '/pro/bordereaux/nouveau'
    | '/pro/sinistres/$claimId'
    | '/pro/bordereaux'
    | '/pro/sinistres'
  id:
    | '__root__'
    | '/'
    | '/admin/toto'
    | '/pro/gli'
    | '/admin/'
    | '/housing/'
    | '/pro/'
    | '/pro/(bordereaux)/bordereaux'
    | '/pro/(sinistres)/sinistres'
    | '/pro/(bordereaux)/bordereaux/$bordereauId'
    | '/pro/(bordereaux)/bordereaux/nouveau'
    | '/pro/(sinistres)/sinistres/$claimId'
    | '/pro/(bordereaux)/bordereaux/'
    | '/pro/(sinistres)/sinistres/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminTotoRoute: typeof AdminTotoRoute
  ProGliRoute: typeof ProGliRoute
  AdminIndexRoute: typeof AdminIndexRoute
  HousingIndexRoute: typeof HousingIndexRoute
  ProIndexRoute: typeof ProIndexRoute
  ProbordereauxBordereauxRouteRoute: typeof ProbordereauxBordereauxRouteRouteWithChildren
  ProsinistresSinistresRouteRoute: typeof ProsinistresSinistresRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pro/': {
      id: '/pro/'
      path: '/pro'
      fullPath: '/pro'
      preLoaderRoute: typeof ProIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/housing/': {
      id: '/housing/'
      path: '/housing'
      fullPath: '/housing'
      preLoaderRoute: typeof HousingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pro/gli': {
      id: '/pro/gli'
      path: '/pro/gli'
      fullPath: '/pro/gli'
      preLoaderRoute: typeof ProGliRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/toto': {
      id: '/admin/toto'
      path: '/admin/toto'
      fullPath: '/admin/toto'
      preLoaderRoute: typeof AdminTotoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pro/(sinistres)/sinistres': {
      id: '/pro/(sinistres)/sinistres'
      path: '/pro/sinistres'
      fullPath: '/pro/sinistres'
      preLoaderRoute: typeof ProsinistresSinistresRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pro/(bordereaux)/bordereaux': {
      id: '/pro/(bordereaux)/bordereaux'
      path: '/pro/bordereaux'
      fullPath: '/pro/bordereaux'
      preLoaderRoute: typeof ProbordereauxBordereauxRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pro/(sinistres)/sinistres/': {
      id: '/pro/(sinistres)/sinistres/'
      path: '/'
      fullPath: '/pro/sinistres/'
      preLoaderRoute: typeof ProsinistresSinistresIndexRouteImport
      parentRoute: typeof ProsinistresSinistresRouteRoute
    }
    '/pro/(bordereaux)/bordereaux/': {
      id: '/pro/(bordereaux)/bordereaux/'
      path: '/'
      fullPath: '/pro/bordereaux/'
      preLoaderRoute: typeof ProbordereauxBordereauxIndexRouteImport
      parentRoute: typeof ProbordereauxBordereauxRouteRoute
    }
    '/pro/(sinistres)/sinistres/$claimId': {
      id: '/pro/(sinistres)/sinistres/$claimId'
      path: '/$claimId'
      fullPath: '/pro/sinistres/$claimId'
      preLoaderRoute: typeof ProsinistresSinistresClaimIdRouteImport
      parentRoute: typeof ProsinistresSinistresRouteRoute
    }
    '/pro/(bordereaux)/bordereaux/nouveau': {
      id: '/pro/(bordereaux)/bordereaux/nouveau'
      path: '/nouveau'
      fullPath: '/pro/bordereaux/nouveau'
      preLoaderRoute: typeof ProbordereauxBordereauxNouveauRouteImport
      parentRoute: typeof ProbordereauxBordereauxRouteRoute
    }
    '/pro/(bordereaux)/bordereaux/$bordereauId': {
      id: '/pro/(bordereaux)/bordereaux/$bordereauId'
      path: '/$bordereauId'
      fullPath: '/pro/bordereaux/$bordereauId'
      preLoaderRoute: typeof ProbordereauxBordereauxBordereauIdRouteImport
      parentRoute: typeof ProbordereauxBordereauxRouteRoute
    }
  }
}

interface ProbordereauxBordereauxRouteRouteChildren {
  ProbordereauxBordereauxBordereauIdRoute: typeof ProbordereauxBordereauxBordereauIdRoute
  ProbordereauxBordereauxNouveauRoute: typeof ProbordereauxBordereauxNouveauRoute
  ProbordereauxBordereauxIndexRoute: typeof ProbordereauxBordereauxIndexRoute
}

const ProbordereauxBordereauxRouteRouteChildren: ProbordereauxBordereauxRouteRouteChildren =
  {
    ProbordereauxBordereauxBordereauIdRoute:
      ProbordereauxBordereauxBordereauIdRoute,
    ProbordereauxBordereauxNouveauRoute: ProbordereauxBordereauxNouveauRoute,
    ProbordereauxBordereauxIndexRoute: ProbordereauxBordereauxIndexRoute,
  }

const ProbordereauxBordereauxRouteRouteWithChildren =
  ProbordereauxBordereauxRouteRoute._addFileChildren(
    ProbordereauxBordereauxRouteRouteChildren,
  )

interface ProsinistresSinistresRouteRouteChildren {
  ProsinistresSinistresClaimIdRoute: typeof ProsinistresSinistresClaimIdRoute
  ProsinistresSinistresIndexRoute: typeof ProsinistresSinistresIndexRoute
}

const ProsinistresSinistresRouteRouteChildren: ProsinistresSinistresRouteRouteChildren =
  {
    ProsinistresSinistresClaimIdRoute: ProsinistresSinistresClaimIdRoute,
    ProsinistresSinistresIndexRoute: ProsinistresSinistresIndexRoute,
  }

const ProsinistresSinistresRouteRouteWithChildren =
  ProsinistresSinistresRouteRoute._addFileChildren(
    ProsinistresSinistresRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminTotoRoute: AdminTotoRoute,
  ProGliRoute: ProGliRoute,
  AdminIndexRoute: AdminIndexRoute,
  HousingIndexRoute: HousingIndexRoute,
  ProIndexRoute: ProIndexRoute,
  ProbordereauxBordereauxRouteRoute:
    ProbordereauxBordereauxRouteRouteWithChildren,
  ProsinistresSinistresRouteRoute: ProsinistresSinistresRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
